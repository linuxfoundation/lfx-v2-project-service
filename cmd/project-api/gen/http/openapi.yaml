swagger: "2.0"
info:
    title: ""
    version: 0.0.1
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /livez:
        get:
            tags:
                - project-service
            summary: livez project-service
            description: Check if the service is alive.
            operationId: project-service#livez
            produces:
                - text/plain
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                        format: byte
            schemes:
                - http
    /openapi.json:
        get:
            tags:
                - project-service
            summary: Download gen/http/openapi3.json
            operationId: project-service#/openapi.json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
    /projects:
        get:
            tags:
                - project-service
            summary: get-projects project-service
            description: Get all projects.
            operationId: project-service#get-projects
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProjectServiceGetProjectsResponseBody'
                        required:
                            - projects
                    headers:
                        Cache-Control:
                            description: Cache control header
                            type: string
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - code
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - code
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        post:
            tags:
                - project-service
            summary: create-project project-service
            description: Create a new project.
            operationId: project-service#create-project
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: Create-ProjectRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProjectServiceCreateProjectRequestBody'
                    required:
                        - slug
                        - description
                        - name
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/ProjectBase'
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - code
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/ConflictError'
                        required:
                            - code
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - code
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /projects/{uid}:
        get:
            tags:
                - project-service
            summary: get-one-project-settings project-service
            description: Get a single project's settings.
            operationId: project-service#get-one-project-settings
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Project UID -- v2 uid, not related to v1 id directly
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProjectServiceGetOneProjectSettingsResponseBody'
                    headers:
                        ETag:
                            description: ETag header value
                            type: string
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - code
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - code
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - project-service
            summary: update-project-settings project-service
            description: Update an existing project's settings.
            operationId: project-service#update-project-settings
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Project UID -- v2 uid, not related to v1 id directly
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: ETag
                  in: header
                  description: ETag header value
                  required: false
                  type: string
                - name: Update-Project-SettingsRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProjectServiceUpdateProjectSettingsRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProjectSettings'
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - code
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - code
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - code
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - project-service
            summary: delete-project project-service
            description: Delete an existing project.
            operationId: project-service#delete-project
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Project UID -- v2 uid, not related to v1 id directly
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: ETag
                  in: header
                  description: ETag header value
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - code
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - code
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - code
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /readyz:
        get:
            tags:
                - project-service
            summary: readyz project-service
            description: Check if the service is able to take inbound requests.
            operationId: project-service#readyz
            produces:
                - text/plain
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                        format: byte
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - code
                            - message
            schemes:
                - http
definitions:
    BadRequestError:
        title: BadRequestError
        type: object
        properties:
            code:
                type: string
                description: HTTP status code
                example: "400"
            message:
                type: string
                description: Error message
                example: The request was invalid.
        description: Bad request
        example:
            code: "400"
            message: The request was invalid.
        required:
            - code
            - message
    ConflictError:
        title: ConflictError
        type: object
        properties:
            code:
                type: string
                description: HTTP status code
                example: "409"
            message:
                type: string
                description: Error message
                example: The resource already exists.
        description: Conflict
        example:
            code: "409"
            message: The resource already exists.
        required:
            - code
            - message
    InternalServerError:
        title: InternalServerError
        type: object
        properties:
            code:
                type: string
                description: HTTP status code
                example: "500"
            message:
                type: string
                description: Error message
                example: An internal server error occurred.
        description: Internal server error
        example:
            code: "500"
            message: An internal server error occurred.
        required:
            - code
            - message
    NotFoundError:
        title: NotFoundError
        type: object
        properties:
            code:
                type: string
                description: HTTP status code
                example: "404"
            message:
                type: string
                description: Error message
                example: The resource was not found.
        description: Resource not found
        example:
            code: "404"
            message: The resource was not found.
        required:
            - code
            - message
    ProjectBase:
        title: ProjectBase
        type: object
        properties:
            announcement_date:
                type: string
                description: The date the project was announced
                example: "2021-01-01"
                format: date
            autojoin_enabled:
                type: boolean
                description: Whether autojoin is enabled for the project
                example: false
            category:
                type: string
                description: The category of the project
                example: Active
                enum:
                    - Active
                    - Adopted
                    - Archived
                    - At-Large
                    - Early Adoption
                    - Emeritus
                    - Graduated
                    - Growth
                    - Idle
                    - Impact
                    - Incubating
                    - Kanister
                    - Mature
                    - Pre-LFESS
                    - Sandbox
                    - SIG
                    - Standards
                    - TAC
                    - Working Group
                    - TAG
                    - NONE
            charter_url:
                type: string
                description: The URL of the project charter document
                example: https://example.com/charter.pdf
                format: uri
            description:
                type: string
                description: A description of the project
                example: project foo is a project about bar
            entity_dissolution_date:
                type: string
                description: The date the project entity was dissolved
                example: "2021-12-31"
                format: date
            entity_formation_document_url:
                type: string
                description: The URL of the project entity formation document
                example: https://example.com/formation.pdf
                format: uri
            formation_date:
                type: string
                description: The date the project was formed
                example: "2021-01-01"
                format: date
            funding_model:
                type: array
                items:
                    type: string
                    example: Membership
                    enum:
                        - Crowdfunding
                        - Membership
                        - Alternate Funding
                description: A list of funding models for the project
                example:
                    - Crowdfunding
            name:
                type: string
                description: The pretty name of the project
                example: Foo Foundation
            parent_uid:
                type: string
                description: The UID of the parent project, should be empty if there is none
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public:
                type: boolean
                description: Whether the project is public
                example: true
            slug:
                type: string
                description: Project slug, a short slugified name of the project
                example: project-slug
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            stage:
                type: string
                description: The stage of the project
                example: Formation - Exploratory
                enum:
                    - Formation - Exploratory
                    - Formation - Engaged
                    - Active
                    - Archived
                    - Formation - On Hold
                    - Formation - Disengaged
                    - Formation - Confidential
                    - Prospect
            uid:
                type: string
                description: Project UID -- v2 uid, not related to v1 id directly
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
        description: A base representation of LF Projects without sub-objects.
        example:
            announcement_date: "2021-01-01"
            autojoin_enabled: false
            category: Active
            charter_url: https://example.com/charter.pdf
            description: project foo is a project about bar
            entity_dissolution_date: "2021-12-31"
            entity_formation_document_url: https://example.com/formation.pdf
            formation_date: "2021-01-01"
            funding_model:
                - Crowdfunding
            name: Foo Foundation
            parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            slug: project-slug
            stage: Formation - Exploratory
            uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
    ProjectServiceCreateProjectRequestBody:
        title: ProjectServiceCreateProjectRequestBody
        type: object
        properties:
            announcement_date:
                type: string
                description: The date the project was announced
                example: "2021-01-01"
                format: date
            auditors:
                type: array
                items:
                    type: string
                    example: Ex architecto repellat non earum cumque illo.
                description: A list of project auditors by their user IDs
                example:
                    - user123
                    - user456
            autojoin_enabled:
                type: boolean
                description: Whether autojoin is enabled for the project
                example: false
            category:
                type: string
                description: The category of the project
                example: Active
                enum:
                    - Active
                    - Adopted
                    - Archived
                    - At-Large
                    - Early Adoption
                    - Emeritus
                    - Graduated
                    - Growth
                    - Idle
                    - Impact
                    - Incubating
                    - Kanister
                    - Mature
                    - Pre-LFESS
                    - Sandbox
                    - SIG
                    - Standards
                    - TAC
                    - Working Group
                    - TAG
                    - NONE
            charter_url:
                type: string
                description: The URL of the project charter document
                example: https://example.com/charter.pdf
                format: uri
            description:
                type: string
                description: A description of the project
                example: project foo is a project about bar
            entity_dissolution_date:
                type: string
                description: The date the project entity was dissolved
                example: "2021-12-31"
                format: date
            entity_formation_document_url:
                type: string
                description: The URL of the project entity formation document
                example: https://example.com/formation.pdf
                format: uri
            formation_date:
                type: string
                description: The date the project was formed
                example: "2021-01-01"
                format: date
            funding_model:
                type: array
                items:
                    type: string
                    example: Membership
                    enum:
                        - Crowdfunding
                        - Membership
                        - Alternate Funding
                description: A list of funding models for the project
                example:
                    - Crowdfunding
            mission_statement:
                type: string
                description: The mission statement of the project
                example: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            name:
                type: string
                description: The pretty name of the project
                example: Foo Foundation
            parent_uid:
                type: string
                description: The UID of the parent project, should be empty if there is none
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public:
                type: boolean
                description: Whether the project is public
                example: true
            slug:
                type: string
                description: Project slug, a short slugified name of the project
                example: project-slug
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            stage:
                type: string
                description: The stage of the project
                example: Formation - Exploratory
                enum:
                    - Formation - Exploratory
                    - Formation - Engaged
                    - Active
                    - Archived
                    - Formation - On Hold
                    - Formation - Disengaged
                    - Formation - Confidential
                    - Prospect
            writers:
                type: array
                items:
                    type: string
                    example: Vitae qui quis consequatur et qui.
                description: A list of project writers by their user IDs
                example:
                    - user123
                    - user456
        example:
            announcement_date: "2021-01-01"
            auditors:
                - user123
                - user456
            autojoin_enabled: false
            category: Active
            charter_url: https://example.com/charter.pdf
            description: project foo is a project about bar
            entity_dissolution_date: "2021-12-31"
            entity_formation_document_url: https://example.com/formation.pdf
            formation_date: "2021-01-01"
            funding_model:
                - Crowdfunding
            mission_statement: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            name: Foo Foundation
            parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            slug: project-slug
            stage: Formation - Exploratory
            writers:
                - user123
                - user456
        required:
            - slug
            - description
            - name
    ProjectServiceGetOneProjectBaseResponseBody:
        title: ProjectServiceGetOneProjectBaseResponseBody
        $ref: '#/definitions/ProjectBase'
    ProjectServiceGetOneProjectSettingsResponseBody:
        title: ProjectServiceGetOneProjectSettingsResponseBody
        $ref: '#/definitions/ProjectSettings'
    ProjectServiceGetProjectsResponseBody:
        title: ProjectServiceGetProjectsResponseBody
        type: object
        properties:
            projects:
                type: array
                items:
                    $ref: '#/definitions/ProjectBase'
                description: Resources found
                example:
                    - announcement_date: "2021-01-01"
                      autojoin_enabled: false
                      category: Active
                      charter_url: https://example.com/charter.pdf
                      description: project foo is a project about bar
                      entity_dissolution_date: "2021-12-31"
                      entity_formation_document_url: https://example.com/formation.pdf
                      formation_date: "2021-01-01"
                      funding_model:
                        - Crowdfunding
                      name: Foo Foundation
                      parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                      public: true
                      slug: project-slug
                      stage: Formation - Exploratory
                      uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    - announcement_date: "2021-01-01"
                      autojoin_enabled: false
                      category: Active
                      charter_url: https://example.com/charter.pdf
                      description: project foo is a project about bar
                      entity_dissolution_date: "2021-12-31"
                      entity_formation_document_url: https://example.com/formation.pdf
                      formation_date: "2021-01-01"
                      funding_model:
                        - Crowdfunding
                      name: Foo Foundation
                      parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                      public: true
                      slug: project-slug
                      stage: Formation - Exploratory
                      uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    - announcement_date: "2021-01-01"
                      autojoin_enabled: false
                      category: Active
                      charter_url: https://example.com/charter.pdf
                      description: project foo is a project about bar
                      entity_dissolution_date: "2021-12-31"
                      entity_formation_document_url: https://example.com/formation.pdf
                      formation_date: "2021-01-01"
                      funding_model:
                        - Crowdfunding
                      name: Foo Foundation
                      parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                      public: true
                      slug: project-slug
                      stage: Formation - Exploratory
                      uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    - announcement_date: "2021-01-01"
                      autojoin_enabled: false
                      category: Active
                      charter_url: https://example.com/charter.pdf
                      description: project foo is a project about bar
                      entity_dissolution_date: "2021-12-31"
                      entity_formation_document_url: https://example.com/formation.pdf
                      formation_date: "2021-01-01"
                      funding_model:
                        - Crowdfunding
                      name: Foo Foundation
                      parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                      public: true
                      slug: project-slug
                      stage: Formation - Exploratory
                      uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
        example:
            projects:
                - announcement_date: "2021-01-01"
                  autojoin_enabled: false
                  category: Active
                  charter_url: https://example.com/charter.pdf
                  description: project foo is a project about bar
                  entity_dissolution_date: "2021-12-31"
                  entity_formation_document_url: https://example.com/formation.pdf
                  formation_date: "2021-01-01"
                  funding_model:
                    - Crowdfunding
                  name: Foo Foundation
                  parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                  public: true
                  slug: project-slug
                  stage: Formation - Exploratory
                  uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - announcement_date: "2021-01-01"
                  autojoin_enabled: false
                  category: Active
                  charter_url: https://example.com/charter.pdf
                  description: project foo is a project about bar
                  entity_dissolution_date: "2021-12-31"
                  entity_formation_document_url: https://example.com/formation.pdf
                  formation_date: "2021-01-01"
                  funding_model:
                    - Crowdfunding
                  name: Foo Foundation
                  parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                  public: true
                  slug: project-slug
                  stage: Formation - Exploratory
                  uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - announcement_date: "2021-01-01"
                  autojoin_enabled: false
                  category: Active
                  charter_url: https://example.com/charter.pdf
                  description: project foo is a project about bar
                  entity_dissolution_date: "2021-12-31"
                  entity_formation_document_url: https://example.com/formation.pdf
                  formation_date: "2021-01-01"
                  funding_model:
                    - Crowdfunding
                  name: Foo Foundation
                  parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                  public: true
                  slug: project-slug
                  stage: Formation - Exploratory
                  uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - announcement_date: "2021-01-01"
                  autojoin_enabled: false
                  category: Active
                  charter_url: https://example.com/charter.pdf
                  description: project foo is a project about bar
                  entity_dissolution_date: "2021-12-31"
                  entity_formation_document_url: https://example.com/formation.pdf
                  formation_date: "2021-01-01"
                  funding_model:
                    - Crowdfunding
                  name: Foo Foundation
                  parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                  public: true
                  slug: project-slug
                  stage: Formation - Exploratory
                  uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
        required:
            - projects
    ProjectServiceUpdateProjectBaseRequestBody:
        title: ProjectServiceUpdateProjectBaseRequestBody
        type: object
        properties:
            announcement_date:
                type: string
                description: The date the project was announced
                example: "2021-01-01"
                format: date
            autojoin_enabled:
                type: boolean
                description: Whether autojoin is enabled for the project
                example: false
            category:
                type: string
                description: The category of the project
                example: Active
                enum:
                    - Active
                    - Adopted
                    - Archived
                    - At-Large
                    - Early Adoption
                    - Emeritus
                    - Graduated
                    - Growth
                    - Idle
                    - Impact
                    - Incubating
                    - Kanister
                    - Mature
                    - Pre-LFESS
                    - Sandbox
                    - SIG
                    - Standards
                    - TAC
                    - Working Group
                    - TAG
                    - NONE
            charter_url:
                type: string
                description: The URL of the project charter document
                example: https://example.com/charter.pdf
                format: uri
            description:
                type: string
                description: A description of the project
                example: project foo is a project about bar
            entity_dissolution_date:
                type: string
                description: The date the project entity was dissolved
                example: "2021-12-31"
                format: date
            entity_formation_document_url:
                type: string
                description: The URL of the project entity formation document
                example: https://example.com/formation.pdf
                format: uri
            formation_date:
                type: string
                description: The date the project was formed
                example: "2021-01-01"
                format: date
            funding_model:
                type: array
                items:
                    type: string
                    example: Membership
                    enum:
                        - Crowdfunding
                        - Membership
                        - Alternate Funding
                description: A list of funding models for the project
                example:
                    - Crowdfunding
            name:
                type: string
                description: The pretty name of the project
                example: Foo Foundation
            parent_uid:
                type: string
                description: The UID of the parent project, should be empty if there is none
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public:
                type: boolean
                description: Whether the project is public
                example: true
            slug:
                type: string
                description: Project slug, a short slugified name of the project
                example: project-slug
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            stage:
                type: string
                description: The stage of the project
                example: Formation - Exploratory
                enum:
                    - Formation - Exploratory
                    - Formation - Engaged
                    - Active
                    - Archived
                    - Formation - On Hold
                    - Formation - Disengaged
                    - Formation - Confidential
                    - Prospect
        example:
            announcement_date: "2021-01-01"
            autojoin_enabled: false
            category: Active
            charter_url: https://example.com/charter.pdf
            description: project foo is a project about bar
            entity_dissolution_date: "2021-12-31"
            entity_formation_document_url: https://example.com/formation.pdf
            formation_date: "2021-01-01"
            funding_model:
                - Crowdfunding
            name: Foo Foundation
            parent_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            slug: project-slug
            stage: Formation - Exploratory
        required:
            - slug
            - description
            - name
    ProjectServiceUpdateProjectSettingsRequestBody:
        title: ProjectServiceUpdateProjectSettingsRequestBody
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: Quo illo voluptatibus.
                description: A list of project auditors by their user IDs
                example:
                    - user123
                    - user456
            mission_statement:
                type: string
                description: The mission statement of the project
                example: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            writers:
                type: array
                items:
                    type: string
                    example: In cupiditate quod.
                description: A list of project writers by their user IDs
                example:
                    - user123
                    - user456
        example:
            auditors:
                - user123
                - user456
            mission_statement: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            writers:
                - user123
                - user456
    ProjectSettings:
        title: ProjectSettings
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: Minus incidunt quia aut vero consequatur qui.
                description: A list of project auditors by their user IDs
                example:
                    - user123
                    - user456
            created_at:
                type: string
                description: The date and time the project was created
                example: "2021-01-01T00:00:00Z"
                format: date-time
            mission_statement:
                type: string
                description: The mission statement of the project
                example: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            updated_at:
                type: string
                description: The date and time the project was last updated
                example: "2021-01-01T00:00:00Z"
                format: date-time
            writers:
                type: array
                items:
                    type: string
                    example: Est et.
                description: A list of project writers by their user IDs
                example:
                    - user123
                    - user456
        description: A representation of LF Project settings.
        example:
            auditors:
                - user123
                - user456
            created_at: "2021-01-01T00:00:00Z"
            mission_statement: The mission of the project is to build a sustainable ecosystem around open source projects to accelerate technology development and industry adoption.
            updated_at: "2021-01-01T00:00:00Z"
            writers:
                - user123
                - user456
    ServiceUnavailableError:
        title: ServiceUnavailableError
        type: object
        properties:
            code:
                type: string
                description: HTTP status code
                example: "503"
            message:
                type: string
                description: Error message
                example: The service is unavailable.
        description: Service unavailable
        example:
            code: "503"
            message: The service is unavailable.
        required:
            - code
            - message
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: Heimdall authorization
        name: Authorization
        in: header
